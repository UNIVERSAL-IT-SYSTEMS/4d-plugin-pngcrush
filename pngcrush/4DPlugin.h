/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Pngcrush
 #	author : miyako
 #	2016/04/30
 #
 # --------------------------------------------------------------------------------*/

#include <stdexcept>

// --- Pngcrush
void Pngcrush(sLONG_PTR *pResult, PackagePtr pParams);

#define PNG_REMOVE_PLTE 1
#define PNG_REMOVE_BKGD	 2
#define PNG_REMOVE_CHRM 4
#define PNG_REMOVE_DSIG 8
#define PNG_REMOVE_GAMA 16
#define PNG_REMOVE_GIFG 32
#define PNG_REMOVE_GIFT 64
#define PNG_REMOVE_GIFX 128
#define PNG_REMOVE_HIST 256
#define PNG_REMOVE_ICCP 512
#define PNG_REMOVE_ITXT 1024
#define PNG_REMOVE_OFFS 2048
#define PNG_REMOVE_PHYS 4096
#define PNG_REMOVE_PCAL 8192
#define PNG_REMOVE_SBIT 16384
#define PNG_REMOVE_SCAL 32768
#define PNG_REMOVE_SRGB 65536
#define PNG_REMOVE_STER 131072
#define PNG_REMOVE_SPLT 262144
#define PNG_REMOVE_TEXT 524288
#define PNG_REMOVE_TIME 1048576
#define PNG_REMOVE_TRNS 2097152
#define PNG_REMOVE_ZTXT 4194304

#include "png.h"
#include "pnglibconf.h"

#include "pngpriv.h"

#include "zlib.h"

typedef struct
{
	png_bytep p;
	png_uint_32 len;
} PNGData, *PNGDataPtr;

typedef struct
{
	C_BLOB *blob;
	png_uint_32 len;
	int last_trial = 0;
} PNGOutData, *PNGOutDataPtr;

typedef struct
{
	int blacken = 0;
	int make_gray = 0;
	int make_opaque = 0;
	int make_8_bit = 0;
	int reduce_palette = 0;
	int plte_len = 0;
} png_pixel, *png_pixelp;

typedef struct
{
	int found_acTL_chunk = 0;
	int found_tRNS = 0;
	int found_sBIT = 0;
	int found_sBIT_max = 0;
	int found_sBIT_different_RGB_bits = 0;
	int input_color_type = 0;
	int found_any_chunk = 0;
	int all_chunks_are_safe = 0;
	int image_is_immutable = 0;
	int found_gAMA = 0;
	int found_color_bKGD = 0;
	int found_cHRM = 0;
	int found_hIST = 0;
	int found_iCCP = 0;
	int found_sRGB = 0;
	int found_CgBI = 0;
	double image_specified_gamma = 0;
	int intent = 0;
	int salvage = 0;
} png_idat, *png_idatp;

/* from pngcrush.c */

#define MAX_METHODS       150
#define MAX_METHODSP1     (MAX_METHODS+1)
#define DEFAULT_MODE     0
#ifdef PNG_MNG_FEATURES_SUPPORTED
# define PNGCRUSH_LOCO
#endif

#  ifdef _WINDOWS_  /* Favor Windows over C runtime fns */
#    define png_memcmp  memcmp
#    define png_memcpy  CopyMemory
#    define png_memset  memset
#  else
#    define png_memcmp  memcmp      /* SJT: added */
#    define png_memcpy  memcpy
#    define png_memset  memset
#  endif

#define DEFAULT_METHODS   10

#ifdef __STDC__
#  define TIME_T clock_t
#else
#  if CLOCKS_PER_SEC <= 100
#    define TIME_T long
#  else
#    define TIME_T float
#  endif
#endif

#define pngcrush_save_uint_32 png_save_uint_32

#define PNGCRUSH_a  97
#define PNGCRUSH_z 122
#define PNGCRUSH_A  65
#define PNGCRUSH_Z  90

#define STR_BUF_SIZE      2048
#define MAX_IDAT_SIZE     524288L

#define PNG_UINT_32_NAME(a,b,c,d) \
((png_uint_32) ((a) & 0xff) << 24  | \
((png_uint_32) (b) << 16) | \
((png_uint_32) (c) <<  8) | \
((png_uint_32) (d)      ))

#define PNGCRUSH_ROWBYTES(pixel_bits, width) \
((pixel_bits) >= 8 ? \
((png_size_t)(width) * (((png_size_t)(pixel_bits)) >> 3)) : \
(( ((png_size_t)(width) * ((png_size_t)(pixel_bits))) + 7) >> 3) )

#  define PNG_UINT_tIME PNG_UINT_32_NAME(116, 73, 77, 69)
#  define PNG_UINT_sTER PNG_UINT_32_NAME(115, 84, 69, 82)
#  define PNG_UINT_sCAL PNG_UINT_32_NAME(115, 67, 65, 76)
#  define PNG_UINT_pCAL PNG_UINT_32_NAME(112, 67, 65, 76)
#  define PNG_UINT_sPLT PNG_UINT_32_NAME(115, 80, 76, 84)
#  define PNG_UINT_iTXt PNG_UINT_32_NAME(105, 84, 88, 116)
#  define PNG_UINT_PLTE PNG_UINT_32_NAME(80, 76, 84, 69)
#  define PNG_UINT_IDAT PNG_UINT_32_NAME(73, 68, 65, 84)
#  define PNG_UINT_acTL PNG_UINT_32_NAME(97, 99, 84, 76)
#  define PNG_UINT_IHDR PNG_UINT_32_NAME(73, 72, 68, 82)
#  define PNG_UINT_sBIT PNG_UINT_32_NAME(115, 66, 73, 84)
#  define PNG_UINT_tRNS PNG_UINT_32_NAME(116, 82, 78, 83)
#  define PNG_UINT_IEND PNG_UINT_32_NAME(73, 69, 78, 68)
#  define PNG_UINT_dSIG PNG_UINT_32_NAME(100, 83, 73, 71)
#  define PNG_UINT_gAMA PNG_UINT_32_NAME(103, 65, 77, 65)
#  define PNG_UINT_bKGD PNG_UINT_32_NAME(98, 75, 71, 68)
#  define PNG_UINT_cHRM PNG_UINT_32_NAME(99, 72, 82, 77)
#  define PNG_UINT_hIST PNG_UINT_32_NAME(104, 73, 83, 84)
#  define PNG_UINT_iCCP PNG_UINT_32_NAME(105, 67, 67, 80)
#  define PNG_UINT_CgBI PNG_UINT_32_NAME(67,103, 66, 73)

#ifndef PNG_HAVE_IHDR
#define PNG_HAVE_IHDR 0x01
#endif